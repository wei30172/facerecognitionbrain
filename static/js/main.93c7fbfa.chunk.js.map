{"version":3,"sources":["components/Logo/pooh.png","components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","id","alt","src","width","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","htmlFor","type","name","value","Register","Logo","options","max","height","padding","pooh","Rank","ImageLinkForm","onInputChange","onButtonSubmit","onChange","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enble","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.93c7fbfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pooh.244817e2.png\";","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n\tif(isSignedIn) {\r\n\t\treturn (\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n\t\t\t\t<div className='bounding-box'style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n\treturn (\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input\r\n\t\t\t      \tonClick={() => onRouteChange('home')}\r\n\t\t\t\t    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t\t    type=\"submit\"\r\n\t\t\t\t    value=\"sign in\"\r\n\t\t\t\t  />\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t      <p onClick={() => onRouteChange('Register')} className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\t\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n\treturn (\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input\r\n\t\t\t      \tonClick={() => onRouteChange('home')}\r\n\t\t\t\t    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t\t    type=\"submit\"\r\n\t\t\t\t    value=\"register\"\r\n\t\t\t\t  />\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\t\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport pooh from './pooh.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n\t\t\t {/*<div className=\"Tilt-inner\"> 🐧 </div>*/}\r\n\t\t\t <div className=\"Tilt-inner pd3\">\r\n\t\t\t \t<img style={{padding: '5px'}} alt='logo' src={pooh}/>\r\n\t\t\t </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{'Winnie, your current rank is ...'}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{'#5'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This Magic creature will detect faces in your pictures. Give it a try.'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='center form pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n\t\t\t\t\t\tonClick={onButtonSubmit}\r\n\t\t\t\t\t>Detact</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React, { Component }  from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport Navigation from './components/Navigation/Navigation.js';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\r\nimport SignIn from './components/SignIn/SignIn.js'\r\nimport Register from './components/Register/Register.js'\r\nimport Logo from './components/Logo/Logo.js';\r\nimport Rank from './components/Rank/Rank.js';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\r\nimport './App.css';\r\n\r\nconst app = new Clarifai.App({\r\n apiKey: 'ba7f0a99c8dd403baeeddbbd033e5bc7'\r\n});\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 100,\r\n      density: {\r\n        enble: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      box: {},\r\n      route: 'signin',\r\n      isSignedIn: false\r\n    }\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input})\r\n    app.models\r\n      .predict(\r\n        Clarifai.FACE_DETECT_MODEL,\r\n        this.state.input)\r\n      .then( response => this.displayFaceBox(this.calculateFaceLocation(response)))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState({isSignedIn: false})\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    } \r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const { imageUrl, box, route, isSignedIn } = this.state;\r\n    return (\r\n      <div className='App'>\r\n        <Particles className='particles'\r\n          params={particlesOptions}\r\n        />\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n        {this.state.route === 'home' \r\n          ? <div>\r\n              <Logo />\r\n              <Rank />\r\n              <ImageLinkForm \r\n                onInputChange={this.onInputChange}\r\n                onButtonSubmit={this.onButtonSubmit}\r\n              />\r\n              <FaceRecognition box={box} imageUrl={imageUrl} />\r\n          </div>\r\n          : (\r\n            this.state.route === 'signin'\r\n            ? <SignIn onRouteChange={this.onRouteChange}/>\r\n            : <Register onRouteChange={this.onRouteChange}/>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}